/*
SQLyog Trial v13.0.0 (64 bit)
MySQL - 5.7.20 : Database - GYM
*********************************************************************
*/

/*!40101 SET NAMES utf8 */;

/*!40101 SET SQL_MODE=''*/;

/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;
CREATE DATABASE /*!32312 IF NOT EXISTS*/`GYM` /*!40100 DEFAULT CHARACTER SET utf8 */;

USE `GYM`;

/*Table structure for table `COURSE` */

DROP TABLE IF EXISTS `COURSE`;

CREATE TABLE `COURSE` (
  `ID` int(10) NOT NULL AUTO_INCREMENT COMMENT '編號(PK)',
  `TYPE` char(1) NOT NULL COMMENT '種類 (p:personal, g:group)',
  `CATEGORY` varchar(10) NOT NULL COMMENT '類別',
  `NAME` varchar(100) NOT NULL COMMENT '課程中文名稱',
  `NAME_ENG` varchar(100) NOT NULL COMMENT '課程英文名稱',
  `FEATURE` varchar(1000) DEFAULT NULL COMMENT '特色',
  `NUM_LIMIT` int(5) NOT NULL COMMENT '學生人數上限',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='課程資訊';

/*Data for the table `COURSE` */

insert  into `COURSE`(`ID`,`TYPE`,`CATEGORY`,`NAME`,`NAME_ENG`,`FEATURE`,`NUM_LIMIT`,`CREATOR`,`CREATED_DATETIME`,`MODIFIER`,`MODIFIED_DATETIME`) values 
(1,'g','aaa','拳擊有氧','Boxing','最早是由一名黑人的搏擊世界冠軍創造的，近兩年才在國內發展起來的。其形式是將拳擊、空手道、跆拳道、功夫，甚至一些舞蹈動作混合在一起，在激烈的音樂中，進行一些拳擊和跆拳道的基本拳法和腿法的運動。健身者在出拳、踢腿的過程中，隨著音樂揮動雙拳，動作剛勁有力，讓健身者盡情地發洩，盡情地出汗，並在不知不覺中減掉全身多餘的脂肪。',10,'ADMIN','2018-04-22 01:27:51',NULL,'2018-04-22 16:12:22'),
(2,'g','bbb','拳輪','Krankcycle','全球最新流行上半身運動器材。飛輪創始者Johnny G發明的最新上半身運動器材同時用到手臂、胸部、背部、腰部等多處! 全台首見!目前由World Gym獨家引進!',15,'ADMIN','2018-04-22 01:28:42',NULL,'2018-04-22 16:11:57'),
(3,'g','bbb','多功式訓練系統','Purmotion','全新多功性肌力訓練系統，刮起運動新旋風! 提供了傳統器材如槓鈴以及啞鈴所無法比擬的訓練面向，看似簡單的變換身體動作，其實已經是肌力方面的挑戰。如果你要尋求體能表現的極限，這是一套很棒的訓練系統。不只可增進核心的力量，核心的強化可幫助避免受傷，增進身體姿勢正確，對日常生活功能性表現有很大助益；也可結合負荷重的方式，進行肌力、肌耐力、爆發力、協調性等的訓練；更可模擬多種競技運動姿勢、加強運動表現。',20,'ADMIN','2018-04-22 01:32:03',NULL,'2018-04-22 16:12:00'),
(4,'g','aaa','懸吊訓練系統','TRX','TRX是一種利用你自己本身的體重以及重力，來增強肌力，平衡，協調，柔軟度，核心以及關節穩定度，來達到預防傷害的一種訓練。懸吊訓練課程透過各種運動可以增進核心力量，藉著運動所創造出的不穩定的要素來讓核心自然而然地提供平衡以及協調性。想像一下，增強核心的力量以及穩定度會對你的日常表現以及生活方式有多大的助益!',5,'ADMIN','2018-04-22 01:34:51',NULL,'2018-04-22 16:12:36'),
(5,'g','bbb','核心肌群訓練系統','ViPR','加強關節和核心肌肉的穩定性，提升肌肉的爆發力! 台灣之光王建民進行各種動作，利用此器材訓練不同的肌肉群，幫助他加強肩膀旋轉肌和腿部的肌肉做為身體平衡、增進投球動作的協調性。帶給他更正確的投球感覺。',25,'ADMIN','2018-04-22 01:36:05',NULL,'2018-04-22 16:12:39');

/*Table structure for table `COURSE_PRICE` */

DROP TABLE IF EXISTS `COURSE_PRICE`;

CREATE TABLE `COURSE_PRICE` (
  `ID` char(32) NOT NULL COMMENT 'UUID(PK)',
  `COURSE_ID` int(10) NOT NULL COMMENT '課程編號',
  `PRICE_ID` int(10) NOT NULL COMMENT '價格編號',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  KEY `FK_COURSE#PRICE_COURSE` (`COURSE_ID`),
  KEY `FK_COURSE#PRICE_PRICE` (`PRICE_ID`),
  CONSTRAINT `FK_COURSE#PRICE_COURSE` FOREIGN KEY (`COURSE_ID`) REFERENCES `COURSE` (`ID`),
  CONSTRAINT `FK_COURSE#PRICE_PRICE` FOREIGN KEY (`PRICE_ID`) REFERENCES `PRICE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='關聯表 - 課程 <-> 價格';

/*Data for the table `COURSE_PRICE` */

/*Table structure for table `INBODY` */

DROP TABLE IF EXISTS `INBODY`;

CREATE TABLE `INBODY` (
  `ID` int(10) NOT NULL AUTO_INCREMENT COMMENT '編號 (PK)',
  `WEIGHT` decimal(5,2) DEFAULT NULL COMMENT '體重 (kg)',
  `MUSCLE_MASS` decimal(5,2) DEFAULT NULL COMMENT '肌肉量 (kg)',
  `TBW` decimal(5,2) DEFAULT NULL COMMENT '身體總水量 (kg)',
  `PROTEINS` decimal(5,2) DEFAULT NULL COMMENT '蛋白質重 (kg)',
  `MINERALS` decimal(5,2) DEFAULT NULL COMMENT '礦物質重 (kg)',
  `BONE_CONTENT` decimal(5,2) DEFAULT NULL COMMENT '骨質含量 (T)',
  `PBF` decimal(5,2) DEFAULT NULL COMMENT '體脂肪率 (%)',
  `VFL` decimal(5,2) DEFAULT NULL COMMENT '內臟脂肪 (%)',
  `BMR` decimal(7,2) DEFAULT NULL COMMENT '基礎代謝率 (kcal)',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8;

/*Data for the table `INBODY` */

/*Table structure for table `MEMBER` */

DROP TABLE IF EXISTS `MEMBER`;

CREATE TABLE `MEMBER` (
  `ID` int(10) NOT NULL AUTO_INCREMENT COMMENT '編號(PK)',
  `ACCOUNT` varchar(50) NOT NULL COMMENT '帳號',
  `PASSWORD` varchar(50) NOT NULL COMMENT '密碼',
  `NAME` varchar(50) NOT NULL COMMENT '姓名',
  `SEX` tinyint(1) NOT NULL COMMENT '性別 (0:女, 1:男)',
  `BIRTHDAY` datetime NOT NULL COMMENT '生日',
  `PHONE` char(10) NOT NULL COMMENT '手機號碼',
  `EMAIL` varchar(100) NOT NULL COMMENT '信箱',
  `ADDR` varchar(200) DEFAULT NULL COMMENT '地址',
  `PHOTO` varchar(50) DEFAULT NULL COMMENT '照片',
  `REMARK` varchar(200) DEFAULT NULL COMMENT '備註',
  `POINT` decimal(20,0) DEFAULT NULL COMMENT '點數',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  UNIQUE KEY `UK_MEMBER` (`ACCOUNT`)
) ENGINE=InnoDB AUTO_INCREMENT=4 DEFAULT CHARSET=utf8 COMMENT='會員資訊';

/*Data for the table `MEMBER` */

insert  into `MEMBER`(`ID`,`ACCOUNT`,`PASSWORD`,`NAME`,`SEX`,`BIRTHDAY`,`PHONE`,`EMAIL`,`ADDR`,`PHOTO`,`REMARK`,`POINT`,`CREATOR`,`CREATED_DATETIME`,`MODIFIER`,`MODIFIED_DATETIME`) values 
(1,'william','123456','wei ming',1,'1988-01-17 23:29:33','0980127131','ithan0117@gmail.com','新竹縣湖口鄉','d:/photo001','test1',100,'ADMIN','2018-04-21 18:15:02','ADMIN','2018-04-22 23:29:54'),
(2,'ocean','123456','yang',1,'1992-11-19 23:29:54','0980123456','ocean@gmail.com','台北市','d:/photo002','test2',200,'ADMIN','2018-04-21 21:19:16',NULL,'2018-04-22 23:30:28'),
(3,'johnson','123456','kuo chia',1,'1985-12-28 23:30:28','0911222333','johnson@gmail.com','新北市','d:/photo003','test3',5000,'ADMIN','2018-04-22 01:38:51',NULL,'2018-04-22 23:31:42');

/*Table structure for table `MEMBER_INBODY` */

DROP TABLE IF EXISTS `MEMBER_INBODY`;

CREATE TABLE `MEMBER_INBODY` (
  `ID` char(32) NOT NULL COMMENT 'UUID(PK)',
  `MEMBER_ID` int(10) NOT NULL COMMENT '會員編號',
  `INBODY_ID` int(10) NOT NULL COMMENT 'INBODY編號',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  KEY `FK_MEMBER#INBODY_MEMBER` (`MEMBER_ID`),
  KEY `FK_MEMBER#INBODY_INBODY` (`INBODY_ID`),
  CONSTRAINT `FK_MEMBER#INBODY_INBODY` FOREIGN KEY (`INBODY_ID`) REFERENCES `INBODY` (`ID`),
  CONSTRAINT `FK_MEMBER#INBODY_MEMBER` FOREIGN KEY (`MEMBER_ID`) REFERENCES `MEMBER` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='關聯表 - 會員 <-> INBODY';

/*Data for the table `MEMBER_INBODY` */

/*Table structure for table `MEMBER_SCHEDULE` */

DROP TABLE IF EXISTS `MEMBER_SCHEDULE`;

CREATE TABLE `MEMBER_SCHEDULE` (
  `ID` varchar(32) NOT NULL COMMENT 'UUID(PK)',
  `MEMBER_ID` int(10) NOT NULL COMMENT '會員編號',
  `SCHEDULE_ID` int(10) NOT NULL COMMENT '課表編號',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  KEY `FK_MEMBER#SCHEDULE_MEMBER` (`MEMBER_ID`),
  KEY `FK_MEMBER#SCHEDULE_SCHEDULE` (`SCHEDULE_ID`),
  CONSTRAINT `FK_MEMBER#SCHEDULE_MEMBER` FOREIGN KEY (`MEMBER_ID`) REFERENCES `MEMBER` (`ID`),
  CONSTRAINT `FK_MEMBER#SCHEDULE_SCHEDULE` FOREIGN KEY (`SCHEDULE_ID`) REFERENCES `SCHEDULE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='關聯表 - 會員 <-> 課表';

/*Data for the table `MEMBER_SCHEDULE` */

/*Table structure for table `PRICE` */

DROP TABLE IF EXISTS `PRICE`;

CREATE TABLE `PRICE` (
  `ID` int(10) NOT NULL AUTO_INCREMENT COMMENT '編號(PK)',
  `LOWER` int(5) NOT NULL COMMENT '課程數下限',
  `UPPER` int(5) NOT NULL COMMENT '課程數上限',
  `UNIT_PRICE` decimal(10,0) NOT NULL COMMENT '單價',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime DEFAULT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=6 DEFAULT CHARSET=utf8 COMMENT='價格';

/*Data for the table `PRICE` */

insert  into `PRICE`(`ID`,`LOWER`,`UPPER`,`UNIT_PRICE`,`CREATOR`,`CREATED_DATETIME`,`MODIFIER`,`MODIFIED_DATETIME`) values 
(1,1,4,2000,'ADMIN','2018-04-21 21:15:20',NULL,NULL),
(2,5,8,1800,'ADMIN','2018-04-21 21:15:32',NULL,NULL),
(3,9,12,1600,'ADMIN','2018-04-21 21:16:27',NULL,NULL),
(4,13,16,1400,'ADMIN','2018-04-21 21:16:59',NULL,NULL),
(5,17,-1,1200,'ADMIN','2018-04-21 21:17:27',NULL,NULL);

/*Table structure for table `SCHEDULE` */

DROP TABLE IF EXISTS `SCHEDULE`;

CREATE TABLE `SCHEDULE` (
  `ID` int(10) NOT NULL AUTO_INCREMENT COMMENT '號(PK)',
  `START_DATETIME` datetime DEFAULT NULL COMMENT '課程開始日期時段',
  `END_DATETIME` datetime DEFAULT NULL COMMENT '課程結束日期時段',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=2 DEFAULT CHARSET=utf8 COMMENT='課表資訊';

/*Data for the table `SCHEDULE` */

insert  into `SCHEDULE`(`ID`,`START_DATETIME`,`END_DATETIME`,`CREATOR`,`CREATED_DATETIME`,`MODIFIER`,`MODIFIED_DATETIME`) values 
(1,'2018-04-01 18:00:00','2018-04-01 20:00:00','ADMIN','2018-04-22 03:48:01',NULL,NULL);

/*Table structure for table `SCHEDULE_COURSE` */

DROP TABLE IF EXISTS `SCHEDULE_COURSE`;

CREATE TABLE `SCHEDULE_COURSE` (
  `ID` char(32) NOT NULL COMMENT 'UUID(PK)',
  `SCHEDULE_ID` int(10) NOT NULL COMMENT '課表編號',
  `COURSE_ID` int(10) NOT NULL COMMENT '課程編號',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  KEY `FK_COURSE#SCHEDULE_COURSE` (`COURSE_ID`),
  KEY `FK_COURSE#SCHEDULE_SCHEDULE` (`SCHEDULE_ID`),
  CONSTRAINT `FK_SCHEDULE#COURSE_COURSE` FOREIGN KEY (`COURSE_ID`) REFERENCES `COURSE` (`ID`),
  CONSTRAINT `FK_SCHEDULE#COURSE_SCHEDULE` FOREIGN KEY (`SCHEDULE_ID`) REFERENCES `SCHEDULE` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='關聯表 - 課程 <-> 課表';

/*Data for the table `SCHEDULE_COURSE` */

/*Table structure for table `SCHEDULE_TRAINER` */

DROP TABLE IF EXISTS `SCHEDULE_TRAINER`;

CREATE TABLE `SCHEDULE_TRAINER` (
  `ID` char(32) NOT NULL COMMENT 'UUID(PK)',
  `SCHEDULE_ID` int(10) NOT NULL COMMENT '課表編號',
  `TRAINER_ID` int(10) NOT NULL COMMENT '教練編號',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  KEY `FK_SCHEDULE#TRAINER_SCHEDULE` (`SCHEDULE_ID`),
  KEY `FK_SCHEDULE#TRAINER_TRAINER` (`TRAINER_ID`),
  CONSTRAINT `FK_SCHEDULE#TRAINER_SCHEDULE` FOREIGN KEY (`SCHEDULE_ID`) REFERENCES `SCHEDULE` (`ID`),
  CONSTRAINT `FK_SCHEDULE#TRAINER_TRAINER` FOREIGN KEY (`TRAINER_ID`) REFERENCES `TRAINER` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='關聯表 - 課表 <-> 教練';

/*Data for the table `SCHEDULE_TRAINER` */

/*Table structure for table `TRAINER` */

DROP TABLE IF EXISTS `TRAINER`;

CREATE TABLE `TRAINER` (
  `ID` int(10) NOT NULL AUTO_INCREMENT COMMENT '編號(PK)',
  `NAME` varchar(50) NOT NULL COMMENT '姓名',
  `SEX` tinyint(1) NOT NULL COMMENT '性別 (0:女, 1:男)',
  `PHOTO` varchar(50) DEFAULT NULL COMMENT '照片',
  `EXPERIENCE` varchar(2000) DEFAULT NULL COMMENT '經歷',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`)
) ENGINE=InnoDB AUTO_INCREMENT=3 DEFAULT CHARSET=utf8 COMMENT='教練資訊';

/*Data for the table `TRAINER` */

insert  into `TRAINER`(`ID`,`NAME`,`SEX`,`PHOTO`,`EXPERIENCE`,`CREATOR`,`CREATED_DATETIME`,`MODIFIER`,`MODIFIED_DATETIME`) values 
(1,'葉西付',1,NULL,'詠春第十六代掌門','ADMIN','2018-04-22 03:46:05',NULL,'2018-04-22 04:48:16'),
(2,'潘若迪',1,NULL,NULL,'ADMIN','2018-04-22 03:46:21',NULL,'2018-04-22 04:48:41');

/*Table structure for table `TRAINER_COURSE` */

DROP TABLE IF EXISTS `TRAINER_COURSE`;

CREATE TABLE `TRAINER_COURSE` (
  `ID` char(32) NOT NULL COMMENT 'UUID(PK)',
  `TRAINER_ID` int(10) NOT NULL COMMENT '教練編號',
  `COURSE_ID` int(10) NOT NULL COMMENT '課程編號',
  `CREATOR` varchar(50) NOT NULL DEFAULT 'ADMIN' COMMENT '建立者',
  `CREATED_DATETIME` datetime NOT NULL COMMENT '建立日期時間',
  `MODIFIER` varchar(50) DEFAULT 'ADMIN' COMMENT '最後修改者',
  `MODIFIED_DATETIME` datetime DEFAULT NULL COMMENT '最後修改日期時間',
  PRIMARY KEY (`ID`),
  KEY `FK_TRAINER#COURSE_TRAINER` (`TRAINER_ID`),
  KEY `FK_TRAINER#COURSE_COURSE` (`COURSE_ID`),
  CONSTRAINT `FK_TRAINER#COURSE_COURSE` FOREIGN KEY (`COURSE_ID`) REFERENCES `COURSE` (`ID`),
  CONSTRAINT `FK_TRAINER#COURSE_TRAINER` FOREIGN KEY (`TRAINER_ID`) REFERENCES `TRAINER` (`ID`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COMMENT='關聯表 - 教練 <-> 課程 (僅用來表示教練的技能)';

/*Data for the table `TRAINER_COURSE` */

insert  into `TRAINER_COURSE`(`ID`,`TRAINER_ID`,`COURSE_ID`,`CREATOR`,`CREATED_DATETIME`,`MODIFIER`,`MODIFIED_DATETIME`) values 
('39ee4bd9459e11e8845854ab3a1b2b9d',1,1,'ADMIN','2018-04-22 03:57:31',NULL,NULL),
('425f940f459e11e8845854ab3a1b2b9d',2,1,'ADMIN','2018-04-22 03:57:45',NULL,NULL);

/* Trigger structure for table `COURSE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_COURSE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_COURSE_BI` BEFORE INSERT ON `COURSE` FOR EACH ROW BEGIN
	IF NEW.TYPE NOT IN('p', 'g') THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'value of `TYPE` must be "p" or "g"';
	ELSE
		SET NEW.CREATED_DATETIME = NOW();
	END IF;
    END */$$


DELIMITER ;

/* Trigger structure for table `COURSE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_COURSE_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_COURSE_BU` BEFORE UPDATE ON `COURSE` FOR EACH ROW BEGIN
	IF NEW.TYPE NOT IN('p', 'g') THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'value of `TYPE` must be "p" or "g"';
	ELSE
		SET NEW.MODIFIED_DATETIME = NOW();
	END IF;
    END */$$


DELIMITER ;

/* Trigger structure for table `COURSE_PRICE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_COURSE#PRICE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_COURSE#PRICE_BI` BEFORE INSERT ON `COURSE_PRICE` FOR EACH ROW BEGIN
	SET NEW.ID = REPLACE(UUID(), '-', '');
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `COURSE_PRICE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_COURSE#PRICE_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_COURSE#PRICE_BU` BEFORE UPDATE ON `COURSE_PRICE` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `INBODY` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_INBODY_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_INBODY_BI` BEFORE INSERT ON `INBODY` FOR EACH ROW BEGIN
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `INBODY` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_INBODY_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_INBODY_BU` BEFORE UPDATE ON `INBODY` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `MEMBER` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_MEMBER_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_MEMBER_BI` BEFORE INSERT ON `MEMBER` FOR EACH ROW BEGIN
	IF NEW.SEX NOT IN(0, 1) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'value of `SEX` must be "0" or "1"';
	ELSE
		SET NEW.CREATED_DATETIME = NOW();
	END IF;
    END */$$


DELIMITER ;

/* Trigger structure for table `MEMBER` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_MEMBER_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_MEMBER_BU` BEFORE UPDATE ON `MEMBER` FOR EACH ROW BEGIN
	IF NEW.SEX NOT IN(0, 1) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'value of `SEX` must be "0" or "1"';
	ELSE
		SET NEW.MODIFIED_DATETIME = NOW();
	END IF;
    END */$$


DELIMITER ;

/* Trigger structure for table `MEMBER_INBODY` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_MEMBER#INBODY_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_MEMBER#INBODY_BI` BEFORE INSERT ON `MEMBER_INBODY` FOR EACH ROW BEGIN
	SET NEW.ID = REPLACE(UUID(), '-', '');
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `MEMBER_INBODY` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_MEMBER#INBODY_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_MEMBER#INBODY_BU` BEFORE UPDATE ON `MEMBER_INBODY` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `MEMBER_SCHEDULE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_MEMBER#SCHEDULE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_MEMBER#SCHEDULE_BI` BEFORE INSERT ON `MEMBER_SCHEDULE` FOR EACH ROW BEGIN
		SET NEW.ID = REPLACE(UUID(), '-', '');
		SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `MEMBER_SCHEDULE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_MEMBER#SCHEDULE` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_MEMBER#SCHEDULE` BEFORE UPDATE ON `MEMBER_SCHEDULE` FOR EACH ROW BEGIN
		SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `PRICE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_PRICE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_PRICE_BI` BEFORE INSERT ON `PRICE` FOR EACH ROW BEGIN
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `PRICE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_PRICE_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_PRICE_BU` BEFORE UPDATE ON `PRICE` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `SCHEDULE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_SCHEDULE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_SCHEDULE_BI` BEFORE INSERT ON `SCHEDULE` FOR EACH ROW BEGIN
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `SCHEDULE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_SCHEDULE_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_SCHEDULE_BU` BEFORE UPDATE ON `SCHEDULE` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `SCHEDULE_COURSE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_SCHEDULE#COURSE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_SCHEDULE#COURSE_BI` BEFORE INSERT ON `SCHEDULE_COURSE` FOR EACH ROW BEGIN
	SET NEW.ID = REPLACE(UUID(), '-', '');
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `SCHEDULE_COURSE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_SCHEDULE#COURSE_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_SCHEDULE#COURSE_BU` BEFORE UPDATE ON `SCHEDULE_COURSE` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `SCHEDULE_TRAINER` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_SCHEDULE#TRAINER_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_SCHEDULE#TRAINER_BI` BEFORE INSERT ON `SCHEDULE_TRAINER` FOR EACH ROW BEGIN
	SET NEW.ID = REPLACE(UUID(), '-', '');
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `SCHEDULE_TRAINER` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_SCHEDULE#TRAINER_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_SCHEDULE#TRAINER_BU` BEFORE UPDATE ON `SCHEDULE_TRAINER` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `TRAINER` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_TRAINER_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_TRAINER_BI` BEFORE INSERT ON `TRAINER` FOR EACH ROW BEGIN
	IF NEW.SEX NOT IN(0, 1) THEN
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'value of `SEX` must be "0" or "1"';
	ELSE
		SET NEW.CREATED_DATETIME = NOW();
	END IF;
    END */$$


DELIMITER ;

/* Trigger structure for table `TRAINER` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_TRAINER_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_TRAINER_BU` BEFORE UPDATE ON `TRAINER` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `TRAINER_COURSE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_TRAINER#COURSE_BI` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_TRAINER#COURSE_BI` BEFORE INSERT ON `TRAINER_COURSE` FOR EACH ROW BEGIN
	SET NEW.ID = REPLACE(UUID(), '-', '');
	SET NEW.CREATED_DATETIME = NOW();
    END */$$


DELIMITER ;

/* Trigger structure for table `TRAINER_COURSE` */

DELIMITER $$

/*!50003 DROP TRIGGER*//*!50032 IF EXISTS */ /*!50003 `TRI_TRAINER#COURSE_BU` */$$

/*!50003 CREATE */ /*!50017 DEFINER = 'root'@'localhost' */ /*!50003 TRIGGER `TRI_TRAINER#COURSE_BU` BEFORE UPDATE ON `TRAINER_COURSE` FOR EACH ROW BEGIN
	SET NEW.MODIFIED_DATETIME = NOW();
    END */$$


DELIMITER ;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;
